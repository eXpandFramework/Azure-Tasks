# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
  - group: keys
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

# trigger: master 
# pool:
#   vmImage: windows-2019
# variables:
#   - group: keys    
# steps:
#   - checkout: self
#     clean: true
  # - task: DownloadBuildArtifacts@0
  #   displayName: "Download Bin"
  #   inputs:
  #       buildType: 'specific'
  #       project: 'dc0010e5-9ecf-45ac-b89d-2d51897f3855'
  #       pipeline: '23'
  #       buildVersionToDownload: specific
  #       buildId: '$(DxPipelineBuildId)'
  #       downloadType: specific
  #       artifactName: 'bin'
  #       downloadPath: '$(System.DefaultworkingDirectory)'
  # - task: PowerShell@2
  #   displayName: Publish Nuget Packages
  #   inputs:
  #     targetType: inline
  #     script: |
  #       $goArgs=@{
  #           Branch ='$(Build.SourceBranchName)'
  #           SourcesRoot ='$(System.DefaultworkingDirectory)'
  #           ApiKey ='$(NugetApiKey)'
  #           LocalPackageSource ='$(System.DefaultWorkingDirectory)\bin\Nupkg' 
  #         }
  #         $env:AzDevopsToken='$(AzureToken)'
  #         $env:AzOrganization="eXpandDevOps"
  #         $env:AzProject ="eXpandFramework"
  #         $env:DXFeed='$(DXApiFeed)'
  #         "goArgs:"
  #         $goArgs|out-string
  #         & .\scripts\Publish-XAF-Nugets.ps1 @goArgs
  # - task: PublishPipelineArtifact@1
  #   displayName: 'Published Packages'
  #   inputs:
  #     targetPath: '$(System.DefaultWorkingDirectory)\bin\Nupkg' 
  #     ArtifactName: 'Nugets'